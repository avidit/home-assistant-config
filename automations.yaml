- id: '1605886570099'
  alias: Living room lights
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '2:00'
    id: sunset
  - platform: time
    at: '23:00:00'
    id: time
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sunset
      sequence:
      - type: turn_on
        device_id: 0885ed2690b46239fb5097c82e1f1073
        entity_id: light.living_room
        domain: light
    - conditions:
      - condition: trigger
        id: time
      sequence:
      - type: turn_off
        device_id: 0885ed2690b46239fb5097c82e1f1073
        entity_id: light.living_room
        domain: light
    default: []
  mode: single
- id: '1605887484325'
  alias: Bedroom light
  description: ''
  trigger:
  - platform: time
    at: input_datetime.bedroom_light_on
    id: 'on'
  - platform: time
    at: input_datetime.bedroom_light_off
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - type: turn_on
        device_id: 138506d6ceac3071a7ea57ba1d9b20c2
        entity_id: light.bedroom
        domain: light
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - type: turn_off
        device_id: 138506d6ceac3071a7ea57ba1d9b20c2
        entity_id: light.bedroom
        domain: light
    default: []
  mode: single
- id: '1607978571172'
  alias: High water usage alert
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.hourly_water_consumption
    above: '20'
  condition: []
  action:
  - service: notify.mobile_app_abi_iphone_12
    data:
      message: High water usage
  mode: single
- id: '1631369919205'
  alias: Check all doors
  description: ''
  trigger:
  - platform: time
    at: '21:00:00'
  condition: []
  action:
  - service: notify.mobile_app_abi_iphone_12
    data:
      message: '{% set doors = expand(''group.doors'') | selectattr(''state'', ''in'',
        [''on'', ''open'']) | map(attribute=''name'') |  map(''replace'', '' Door'',
        '''')  | list %} {% set count = doors | count %} {% if count == 0 %} All doors
        are closed. {% else %} The {{ doors | join('', and '')}} door{{ ''s are ''
        if count > 1 else '' is '' }}open. {% endif %}'
      data:
        actions:
        - action: close_garage_door
          title: Close Garage Door
  mode: single
- id: '1631372133150'
  alias: Close garage door from iOS notification
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: close_garage_door
  action:
  - service: cover.close_cover
    target:
      entity_id: cover.garage_door
    data: {}
  mode: single
- id: '1641389647705'
  alias: Thermostat
  description: ''
  trigger:
  - platform: time
    at: 07:00:00
    id: day
  - platform: time
    at: '23:00:00'
    id: night
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: day
      sequence:
      - service: climate.set_temperature
        data:
          temperature: 68
          hvac_mode: heat
        target:
          entity_id: climate.living_room_thermostat
    - conditions:
      - condition: trigger
        id: night
      sequence:
      - service: climate.set_temperature
        data:
          temperature: 60
          hvac_mode: heat
        target:
          entity_id: climate.living_room_thermostat
    default: []
  mode: single
- id: '1642526504100'
  alias: TV bias light
  description: ''
  trigger:
  - platform: device
    device_id: d57169b4050311eb87605dd332f99035
    domain: media_player
    entity_id: media_player.sony_bravia_tv
    type: playing
    id: playing
  - platform: device
    device_id: d57169b4050311eb87605dd332f99035
    domain: media_player
    entity_id: media_player.sony_bravia_tv
    type: turned_off
    id: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: playing
      - condition: time
        before: 06:00:00
        after: '20:00:00'
      sequence:
      - type: turn_on
        device_id: e6579d0ff24dc6983d622b7dc534659f
        entity_id: light.tv_light
        domain: light
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - type: turn_off
        device_id: e6579d0ff24dc6983d622b7dc534659f
        entity_id: light.tv_light
        domain: light
    default: []
  mode: single
- id: '1642785019365'
  alias: Alarm
  description: ''
  trigger:
  - platform: state
    entity_id: group.family
    to: home
    id: home
  - platform: state
    entity_id:
    - group.family
    to: not_home
    id: not_home
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: not_home
      sequence:
      - device_id: 2707a9e748fb6372efc2520dd7a11576
        domain: alarm_control_panel
        entity_id: alarm_control_panel.alarmo
        type: arm_away
    - conditions:
      - condition: trigger
        id: home
      sequence:
      - device_id: 2707a9e748fb6372efc2520dd7a11576
        domain: alarm_control_panel
        entity_id: alarm_control_panel.alarmo
        type: disarm
    default: []
  mode: single
- id: '1646266387752'
  alias: View cameras - mobile
  description: ''
  trigger:
  - platform: state
    entity_id: input_button.view_cameras_mobile
  condition: []
  action:
  - service: notify.mobile_app_abi_iphone_12
    data:
      message: Driveway
      data:
        attachment:
          content-type: jpeg
        push:
          category: camera
        entity_id: camera.driveway_cam
  - service: notify.mobile_app_abi_iphone_12
    data:
      data:
        attachment:
          content-type: jpeg
        push:
          category: camera
        entity_id: camera.backyard_cam
      message: Backyard
  mode: single
- id: '1646314071906'
  alias: Save lovelace config
  description: ''
  trigger:
  - platform: state
    entity_id: input_button.save_lovelace_config
  condition: []
  action:
  - service: shell_command.save_lovelace
    data: {}
  mode: single
- id: '1646318387526'
  alias: Generate readme
  description: ''
  trigger:
  - platform: state
    entity_id: input_button.generate_readme
  condition: []
  action:
  - service: readme.generate
    data: {}
  mode: single
- id: '1646662551616'
  alias: Weather summary
  description: ''
  trigger:
  - platform: time
    at: 09:00:00
  condition: []
  action:
  - service: tts.google_translate_say
    data:
      entity_id: media_player.office_speaker
      message: Today, it is going to be {{ states('weather.openweathermap_daily')
        }}. Currently, it is {{ state_attr('weather.openweathermap_hourly','temperature')
        | round }} ¬∞F and it feels like {{ states('sensor.openweathermap_hourly_feels_like_temperature')
        | round }} ¬∞F. Today's high will be {{ state_attr('weather.openweathermap_daily',
        'forecast')[0].temperature | round }} ¬∞F and low will be {{ state_attr('weather.openweathermap_daily',
        'forecast')[0].templow | round }} ¬∞F. Humidity will be {{ state_attr('weather.openweathermap_daily',
        'humidity') }}% with precipitation probability of {{ state_attr('weather.openweathermap_daily',
        'forecast')[0].precipitation_probability }}%
  mode: single
- id: '1650311187812'
  alias: Time to go home
  description: ''
  trigger:
  - platform: zone
    entity_id: person.abi
    zone: zone.gsm
    event: enter
  condition:
  - condition: time
    before: '17:00:00'
    after: '12:00:00'
  action:
  - service: notify.mobile_app_ras_iphone
    data:
      title: üïü üè†
      message: '{{ states("sensor.zenquote") }}'
  mode: single
